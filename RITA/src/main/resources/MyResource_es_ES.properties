<!--Este es el archivo de propiedades de lenguaje ESPA\u00d1OL para RITA-->

<!-- El core de la aplicacion siempre en minuscula-->
<!-- Estructura de Control -->
<!-- if=si -->
<!-- while=mientras -->

<!-- S\u00f2lo lo que hace a la interfaz grafica va con mayuscula-->
<!-- Menu -->
titleApp=RITA - Robot Inventor to Teach Algorithms
robots=Robots
edit=Edici\u00f3n
setting=Configuracion
help=Ayuda
new=Nuevo
open=Abrir
save=Guardar
saveAll=Guardar al Robot
compile=Compilar y Ejecutar
undo=Deshacer
redo=Rehacer
preferences=Preferencias de RITA
information=Informaci\u00f3n
error=Ocurri\u00f3 un Problema
about=Acerca de
about.title=Acerca de RITA
about.heading=RITA versi\u00f3n 1.6 - Septiembre 2013
about.text=<b>Autor:</b> Vanessa Aybar Rosales<br><b>Contribuciones:</b> Mat\u00EDas Brown, Ra\u00FAl Benencia, Nicol\u00e1s Perera, Juan Pablo Tarragona<br><br>El c\u00f3digo de RITA es open source y su distribuci\u00f3n es gratuita.<br><b>Contacto:</b><tt>vaybar@info.unlp.edu.ar</tt><p>RITA est\u00e1 basado en los siguientes frameworks y bibliotecas:<ul><li>El editor de bloques est\u00e1 implementado con <a href="http://education.mit.edu/openblocks">Openblocks</a>.</li><li>La batalla es ejecutada por <a href="http://robocode.sourceforge.net/">Robocode</a>.</li><li>EL estilo de la interfaz de usuario es Substance.</li><li>El coloreado del c\u00f3digo fuente generado est\u00e1 basado en <a href="http://code.google.com/p/jxtextpane">JXTextPane</a>.</li></ol><p>
Junior=Junior
Advanced=Avanzado
<!-- Ventanas -->
ok=Aceptar
cancel=Cancelar
cerrar=Cerrar
robot.new=Nuevo Robot
robot.name=Mi Robot se llama
createRobot=Crear Robot!
youtRobotAgainst=Tu robot %s competir\u00e1 con:
verificarPermiso=Verifique que tiene permisos de escritura en la carpeta de esta aplicaci\u00f3n!
enterName=Debe ingresar un nombre para el Robot!
loadingRobot=Cargando el robot, un momento por favor...
creatingRobot=Creando el robot, un momento por favor...
positionOf=Posicion de 
xCoord=X
yCoord=Y
title.position.set=Posición de 
position.set=Indique en el \u00e1rea donde desea ubicar a 
button.positionUnselected=?
button.positionSelected=*
robotsBattleMode.random=Deseo que los robots se ubiquen al azar
robots.heading.NORTH=Norte
robots.heading.EAST=Este
robots.heading.SOUTH=Sur
robots.heading.WEST=Oeste
robotsPositioning.orientation=La orientación del robot es ...
robotsPositioning.selectxy=Seleccioná la ubicación en el campo de batalla
robotsPositioning.writexy=ó ingrese valores 


<!--SETTINGS-->
systemConfig=Configuraci\u00f3n del sistema
settings.defaultpackage= Elija un nombre de grupo para sus robots
settings.outputdirectory=Directorio de los Archivos Generados
settings.level=Nivel de dificultad de su adversario en batalla
level.one=F\u00e1cil
level.two=Medio
level.three=Dificil
#level.four es el default!
level.four=Seleccionar mis adversarios en cada batalla
selectEnemies=Seleccionar adversarios
selectStartBattle=\u00a1Listo!
selectAllEnemies=Todos
selectNoEnemies=Ninguno
selectRoundsNumber=Número de rondas
myRobotPosition=Posicion de mi robot
selectenemies.text=Seleccione los robots contra los que desea competir
selectOrCreate=Cree o seleccione su robot
createWithName=Cree un nuevo robot, llamado:
openAlreadyCreated=Abra un robot ya creado
createRobot=Crear robot
openButton=Abrir robot...
toStart=Para comenzar....
or=o...
error.robotName=Ya existe un robot con este nombre, modifique el nombre.
newRobotName=Nombre del nuevo robot:
selectRobotsInitialsPositions=Seleccionar la posición inicial del robot
selectInitialPosition=Posición inicial
selectInitialPositionX=Posición en X
selectInitialPositionY=Posición en Y
selectInitialPositionHead=Donde apunta el robot

<!-- Menu Contextual-->
generateCode=Generar C\u00f3digo del Robot
addComment=Agregar Comentario
deleteComment=Eliminar Comentario
arrangeBlocks=Organizar todos los bloques
setValue=Cambiar valor de la variable
getValue=Tomar el valor de la variable
getValueParam=Tomar el valor del par\u00e1metro
createCall=Llamar a este m\u00e9todo
emptyComment=Comentario...

<!-- Errores -->
robot.noImage= (sin imagen disponible)
robot.error.fileNotFound=No se encuentra el archivo
robot.noEnemies = No fue posible encontrar enemigos.

<!-- Sorce Code-->
codeButton.title.open=Ver C\u00f3digo
codeButton.title.close=Ocultar C\u00f3digo
saveButton.title=Guardar
saveButton.tooltip=Guardar codigo fuente en archivo .java
compileButton.title=Compilar y Ejecutar
compileButton.tooltip=Guarda y genera codigo ejecutable en archivos .class y .jar

<!--PERERATARRAGONA -->
<!-- Eventos de Advancedrobot-->
battleEndedEvent.text=Evento de finalizacion de batalla
bulletHitEvent.text=Evento de golpe de bala
hitByBulletEvent.text=Evento de robot al ser golpeado por una bala
hitRobotEvent.text=Evento al chocar con un robot
hitWallEvent.text=Evento al chocar con una pared
robotDeathEvent.text=Evento al morir un robot
roundEndedEvent.text=Evento al acabar una ronda
scannedRobotEvent.text=Evento al escanear un robot
winEvent.text=Evento al ganar
bulletHitBulletEvent.text=Evento de bala que golpea otra bala
bulletMissedEvent.text=Evento de bala perdida

<!-- EventMethods de AdvancedRobot-->
eventMethodisAborted=Fue Abortado
eventMethodisMyFault=Fue mi culpa
eventMethodgetEnergy=Obtener Energia
eventMethodgetName=Obtener nombre
eventMethodgetBearing=Obtener angulo relativo enemigo
eventMethodgetBearingRadians=Obtener angulo relativo enemigo en radianes
eventMethodgetHeading=Obtener angulo del robot
eventMethodgetHeadingRadians=Obtener angulo del robot en radianes
eventMethodgetPower=Obtener poder
eventMethodgetVelocity=Obtener velocidad
eventMethodgetRound=Obtener ronda
eventMethodgetTotalRounds=Obtener rondas totales
eventMethodgetTotalTurns=Obtener turnos totales
eventMethodgetTurns=Obtener turnos
eventMethodgetDistance=Obtener distancia

eventMethod.text=Devuelve un metodo de un evento
<!--END PERERATARRAGONA-->

<!--Archivo de definiciones JuniorRobot-->
getter.text=Devuelve el valor de una variable
setter.text=Setea el valor de una variable
caller.text=Crea una invocaci\u00f3n a un m\u00e9todo
number.text=Representa un numero entero
double.text=Representa un numero con punto flotante de doble precisiÃ³n
string.text=Representa un texto
true.text=Representa el valor verdadero
false.text=Representa el valor falso
red.text=Representa el color rojo
black.text=Representa el color negro
white.text=Representa el color blanco
gray.text=Representa el color gris
orange.text=Representa el color naranja
yellow.text=Representa el color amarillo
green.text=Representa el color verde
blue.text=Representa el color azul
brown.text=Representa el color marr\u00f3n
purple.text=Representa el color p\u00farpura
cyan.text=Representa el color cyan
magenta.text=Representa el color magenta
ahead.text=El robot se mueve la cantidad especificada de pasos hacia adelante
ahead.arg1=N\u00famero de pasos a moverse
back.text=El robot se mueve la cantidad especificada de pasos hacia atr\u00e1s
back.arg1=N\u00famero de pasos a moverse
turnAheadLeft.text=El robot se mueve hacia adelante la cantidad especificada de pixels y gira a izquierda otra cantidad de grados a la vez.
turnAheadLeft.arg1=Numero de pixels a moverse
turnAheadLeft.arg2=Numero de grados a moverse
turnAheadRight.text=El robot se mueve hacia adelante la cantidad especificada de pixels y gira a derecha otra cantidad de grados a la vez.
turnAheadRight.arg1=Numero de pixels a moverse
turnAheadRight.arg2=Numero de grados a moverse
turnBackLeft.text=El robot se mueve hacia atr\u00e1s la cantidad especificada de pixels y gira a izquierda otra cantidad de grados a la vez.
turnBackLeft.arg1=Numero de pixels a moverse
turnBackLeft.arg2=Numero de grados a moverse
turnBackRight.text=El robot se mueve hacia atr\u00e1s la cantidad especificada de pixels y gira a derecha otra cantidad de grados a la vez.
turnBackRight.arg1=Numero de pixels a moverse
turnBackRight.arg2=Numero de grados a moverse
turnLeft.text=El robot gira a la izquiera la cantidad de grados especificada
turnLeft.arg1=Numero de grados a moverse
turnRight.text=El robot gira a la derecha la cantidad de grados especificada
turnRight.arg1=Numero de grados a moverse
turnTo.text=El robot gira en un \u00e1ngulo absoluto
turnTo.arg1=Numero de grados a moverse
turnGunLeft.text=El robot gira el arma a la izquierda la cantidad de grados especificados
turnGunLeft.arg1=Numero de grados a moverse
turnGunRight.text=El robot gira el arma a la derecha la cantidad de grados especificados
turnGunRight.arg1=Numero de grados a moverse
turnGunTo.text=El robot gira el arma en un \u00e1ngulo absoluto
turnGunTo.arg1=Numero de grados a voltear el arma
bearGunTo.text=El robot gira el arma en el \u00e1ngulo especificado relativo al robot
bearGunTo.arg1=Angulo especificado
doNothing.text=No hace nada en su turno
doNothing1.text=No hace nada durante la cantidad especificada de turnos
doNothing1.arg1=Numero de turnos donde no hace nada
fire.text=Dispara una bala con poder default de 1
fire1.text=Dispara una bala con el especificado poder, el cual va entre 1 y 3 donde 3 es el maximo poder
fire1.arg1=Dispara una bala con el poder especificado, entre 1 y 3 donde 3 es el maximo poder

<!-- PERERATARRAGONA -->
getBattleFieldHeight.text=Retorna el alto del campo de batalla actual en pixeles
getBattleFieldWidth.text=Retorna el ancho del campo de batalla actual en pixeles
getEnergy1.text=Retorna la energia actual del robot
getGunCoolingRate.text=Retorna el ritmo al cual el arma se enfria. Por ejemplo el calor total del arma
getGunHeading.text=Retorna la direccion a la cual esta apuntando el arma del robot en grados.
getGunHeat.text=Retorna el calor actual del arma
getHeading1.text=Retorna la direccion a la cual esta apuntando el cuerpo del robot en grados
getHeight.text=Retorna el alto del robot medido en pixeles
getName.text=Retorna el nombre del robot
getNumRounds.text=Retorna el numero de rondas en la batalla actual
getOthers.text=Retorna cuantos oponentes quedan en la ronda actual
getRadarHeading.text=Retorna la direccion a la que el radar del robot esta apuntando en grados
getRoundNum.text=Retorna el numero de ronda actual (de 0 a getNumRounds() - 1) de la batalla
getWidth.text=Retorna el ancho del robot medido en pixeles
getX.text=Retorna la posicion X del robot (0,0) es la esquina inferior izquierda del campo de batalla
getY.text=Retorna la posicion Y del robot (0,0) es la esquina inferior izquierda del campo de batalla
resume.text=Inmediatamente finaliza el movimiento que fue detenido con stop() en caso de que asi haya sido
scan.text=Escanea por otros robots.
setAdjustGunForRobotTurn.text=Setea el arma para girar independientemente del turno del robot.
setAdjustGunForRobotTurn.arg1=Parametro booleano.
setAdjustRadarForGunTurn.text=Setea al radar para girar independientemente del turno del arma.
setAdjustRadarForGunTurn.arg1=Parametro booleano.
setAdjustRadarForRobotTurn.text=Setea al radar para girar independientemente del turno del robot.
setAdjustRadarForRobotTurn.arg1=Parametro booleano.
setAllColors.text=Setea todos los colores del robot al mismo color al mismo tiempo. El color del cuerpo, arma, radar, balas, escaner, etc.
setBodyColor.text=Setea el color del cuerpo del robot.
setBulletColor.text=Setea el color de las balas del robot.
setColors.text=Setea el color del cuerpo del robot, del arma y del radar al mismo tiempo.
setColors1.text=Setea el color del cuerpo del robot, del arma, del radar, de las balas y del arco del escaner al mismo tiempo.
setGunColor.text=Setea el color del arma del robot.
setRadarColor.text=Setea el color del radar del robot.
setScanColor.text=Setea el color del arco del escaner del robot.
stop.text=Inmediatamente detiene todo movimiento y espera por una llamada a resume().
stop1.text=Inmediatamente detiene todo movimiento y espera por una llamada a resume().
turnRadarLeft.text=Inmediatamente gira el radar del robot a la izquierda una cantidad de grados.
turnRadarRight.text=Inmediatamente gira el radar del robot a la dereche una cantidad de grados.

<!-- ENDPERERATARRAGONA -->

if.text=Si la condicion se cumple, se realiza el bloque de comandos asociado
if.arg1=Indica la condicion evaluada
if.arg2=Es el conjunto de instrucciones realizadas cuando la condicion se cumple
ifelse.text=Si la condicion se cumple, ejecuta el primer bloque, caso contrario ejecuta el segundo bloque
ifelse.arg1=Indica la condicion evaluada
ifelse.arg2=Bloque de instrucciones ejecutado cuando la condicion se cumple
ifelse.arg3=Bloque de instrucciones ejecutado cuando la condicion no se cumple
for.text=Repite un bloque de comandos una cantidad especificada de veces
for.arg1=Numero de veces que se repite el bloque dentro del FOR
for.arg2=Bloque de comandos a realizar
while.text=Repite un bloque de comandos mientras la condicion se cumpla
while.arg1=Numero de veces que se repite el bloque dentro del WHILE
while.arg2=Bloque de comandos a realizar
or.text=Devuelve verdadero si una de las condiciones o ambas son verdaderas
or.arg1=Es la primer condicion que podr\u00eca ser verdadera
or.arg2=Es la segunda condicion que podr\u00eca ser verdadera
and.text=Devuelve verdadero si ambas condiciones son verdaderas
and.arg1=La primer condicion que podr\u00eca ser verdadera
and.arg2=La segunda condicion que podr\u00eca ser verdadera
not.arg1=El valor verdadero o falso que se devolver\u00e1 invertido

print.text=Imprime en la salida estandar un mensaje

string-append.text=Forma un texto a partir de los dos valores especificados
sum.text=Devuelve la suma de dos n\u00fameros
difference.text=Devuelve la diferencia de dos n\u00fameros
product.text=Devuelve el producto de dos n\u00fameros
quotient.text=Devuelve el cociente de dos n\u00fameros
equals.text=Determina si dos cantidades son iguales
not-equals.text=Determina si dos cantidades son diferentes
lessthan.text=Determina si el primer valor es menor al segundo valor
lessthanorequalto.text=Determina si el primer valor es menor o igual al segundo valor
greaterthan.text=Determina si el primer valor es mayor al segundo valor
greaterthanorequalto.text=Determina si el primer valor es mayor o igual al segundo valor

toInt.text=Convierte un número de double a int (casting)
toInt.arg1=El valor de tipo double a convertir

random.text=Devuelve un double positivo, mayor o igual a 0.0 y menor que 1.0.
abs.text=Si el argumento no es negativo, se devuelve el argumento. Si es negativo, se devuelve su negación.
abs.arg1=El número cuyo valor absoluto será calculado.
sqrt.text=Devuelve la raíz cuadrada del argumento recibido.
sqrt.arg1=El número cuya raíz cuadrada será calculada.
sin.text=Devuelve el seno trigonométrico de un ángulo.
sin.arg1=Un ángulo en radianes.
cos.text=Devuelve el coseno trigonométrico de un ángulo.
cos.arg1=Un ángulo en radianes.
tan.text=Devuelve la tangente trigonométrica de un ángulo.
tan.arg1=Un ángulo en radianes.
asin.text=Devuelve el arco seno de un valor; el ángulo retornado está en el rango -pi/2 a pi/2.
asin.arg1=El valor cuyo arco seno será devuelto.
acos.text=Devuelve el arco coseno de un valor; el ángulo retornado está en el rango 0.0 a pi.
acos.arg1=El valor cuyo arco coseno será devuelto.
atan.text=Devuelve el arco tangente de un valor; el ángulo retornado está en el rango -pi/2 a pi/2.
atan.arg1=El valor cuyo arco tangente será devuelto.
toDegrees.text=Convierte un ángulo medido 
<!--en radianes a un ángulo aproximadamente equivalente medido en grados.-->
toDegrees.arg1=Un ángulo en radianes.
toRadians.text=Convierte un ángulo medido en grados a un 

<!--ángulo aproximadamente equivalente medido en radianes.-->
toRadians.arg1=Un ángulo en grados.

setColors.text=Indica 3 colores en el robot
setColors1.text=Indica 5 colores en el robot

bodyColor=Color del cuerpo del robot
gunColor=Color del arma del robot
radarColor=Color del radar del robot
bulletColor=Color de las balas del robot
scanArcColor=Color de arco de escaneo del robot

<!--Variables-->
energy.text=Cantidad de energia actual de este robot, donde 100 significa energia completa y 0 significa sin energia(muerto)
fieldHeight.text=Contiene la altura del campo de batalla
fieldWidth.text=Contiene el ancho del campo de batalla
gunBearing.text=Angulo del arma relativo al cuerpo del robot (en grados)
gunHeading.text=Angulo absoluto del arma de este robot (en grados)
gunReady.text=Indica si el arma est\u00e1 lista para disparar (verdadero o falso), dependiendo de su temperatura (podria necesitar enfriarse).
heading.text=Angulo actual del robot (en grados).
hitByBulletAngle.text=Ultimo angulo desde donde este robot fue alcanzado por una bala (en grados)
hitByBulletBearing.text=Ultimo angulo desde donde este robot fue alcanzado por una bala (en grados) comparado al cuerpo de este robot
hitRobotAngle.text=Ultimo angulo desde donde este robot alcanz\u00f3 otro robot (en grados)
hitRobotBearing.text=Ultimo angulo desde donde este robot alcanz\u00f3 otro robot (en grados) comparado al cuerpo de este robot
hitWallAngle.text=Ultimo angulo donde este robot golpe\u00f3 un muro (en grados)
others.text=Cantidad de otros robot en el campo de batalla
robotX.text=Ubicacion horizontal actual de este robot (en pixels)
robotY.text=Ubicacion vertical actual de este robot (en pixels)
scannedAngle.text=Angulo actual al robot m\u00e0s cercano que fue escaneado (en grados)
scannedBearing.text=Angulo actual al robot m\u00e0s cercano que fue escaneado (en grados) comparado al cuerpo de este robot
scannedDistance.text=Distancia actual al robot escaneado m\u00e1s cercano (en pixels)
scannedEnergy.text=Energia actual del robot m\u00e0s cercano que fue escaneado
scannedHeading.text=Rumbo actual del robot m\u00e0s cercano que fue escaneado (en grados).
scannedVelocity.text=Velocidad actual del robot m\u00e0s cercano que fue escaneado

declaration.text=Define una variable.
procedure.text=Define una seccion de bloques que puede ser llamada desde otras secciones de bloques
return.text=Devuelve un valor
proc-param-number.text=Agrega un par\u00e0metro numerico a un metodo
proc-param-double.text=Agrega un par\u00e0metro de punto flotante con doble precisiÃ³n a un metodo
proc-param-boolean.text=Agrega un par\u00e0metro boolean a un metodo
proc-param-string.text=Agrega un par\u00e0metro texto a un metodo

run.text=Este metodo se ejecuta siempre que no ocurra ning\u00fan evento que afecte a \u00e9ste robot
onBattleEnded.text=Este metodo se ejecuta cuando termina la batalla
onBulletHit.text=Este metodo se ejecuta al ser golpeado por una bala
onBulletHitBullet.text=Este metodo se ejecuta cuando una bala golpea otra bala
onBulletMissed.text=Este metodo se ejecuta cuando una bala erra a su objetivo
onHitByBullet.text=Este metodo se ejecuta cuando \u00e9ste robot es alcanzado por las balas de otro robot
onHitRobot.text=Este metodo se ejecuta cuando una bala de este robot ha alcanzado a otro robot
onHitWall.text=Este metodo se ejecuta cuando este robot ha chocado contra un muro
onRobotDeath.text=Este metodo se ejecuta cuando muere un robot
onRoundEnded.text=Este metodo se ejecuta cuando termina la ronda
onScannedRobot.text=Este metodo se ejecuta cuando el radar de este robot detecta otro robot
onWin.text=Este metodo se ejecuta cuando se gana la partida

MethodImplRobocode=A Codificar
Movement=Movimiento
Events=Eventos
Action=Acciones
VariablesRobocode=Informaci\u00f3n
Logic=L\u00f3gica
Text=Texto
Math=Matem\u00e1tica
CustomMethod=M\u00e9todo
Colors=Colores
NewVariable= Variable

robocodeBlock=Bloques Robocode
basicBlock=Sentencias B\u00e1sicas
newCodeBlock=Nuevas Definiciones

search.blocks=Buscar bloque
search.comment=Busca bloques en la paleta y el espacio de trabajo

<!-- Rule error-->
parameterRuleError=Debe asociarse un par\u00e1metro!
parameterRuleOutOfMethodError=El par\u00e1metro debe usarse dentro de un m\u00e9todo!
returnTypeError=El tipo de retorno debe ser el mismo dentro de un m\u00e9todo!
returnRobocodeError=Los m\u00e9todos de Robocode disponibles no tienen valor de retorno!
returnWithoutStartError=Indique valor de retorno dentro de un m\u00e9todo!
declaracionSimpleError=Inicialice las variables con valores simples!

<!--init Label-->
print=Mostrar valor de
declarationLabel=nombreDeVariable
customMethod=miMetodo
return=Valor devuelto
numberParam=parametroNumerico
doubleParam=parametroDouble
booleanParam=parametroBooleano
textParam=parametroTexto

<!-- Varios -->
textChanged.param=El nombre del par\u00e1metro ya existe!
textChanged.blank=Los nombres de m\u00e9todos, variables y par\u00e1metros no pueden contener espacios!
compile.error="Ocurrieron errores en la compilaci\u00f3n! Revise el c\u00f3digo!"
findDir=Seleccione un directorio...
configureJDK=Es necesario que configure el directorio donde instal\u00f3 el JDK.\nEsta configuraci\u00f3n se realiza desde la opci\u00f3n de men\u00fa Preferencias.\n\u00bfDesea configurarlo ahora?
warning=ATENCI\u00d3N!
notValidJDK=El directorio ingresado no contiene el JDK.\nPor favor verifiquelo e ingr\u00e9selo desde el men\u00fa Preferencias
configureJDKLater=Recuerde que antes de poner a prueba su Robot en el campo de batalla,\n\u00a1deber\u00e1 configurar el JDK desde el men\u00fa Preferencias!

confirm.title=Confirmar
confirm.message=Al abrir un nuevo archivo se cerrar\u00e1 el robot actual\ny los cambios no guardados se perder\u00e1n.\n\u00bfDesea continuar?
confirm.newmessage=Al crear un nuevo robot se cerrar\u00e1 el robot actual\ny los cambios no guardados se perder\u00e1n.\n\u00bfDesea continuar?
confirm.nameAlreadyExists=Existe otro Robot creado con ese nombre.\n\u00bfDesea sobreescribirlo?

XMLProject=Proyecto RITA XML

error.maxInstances=Ya existe una implementacion de este m\u00e9todo
error.useDecl=Est\u00e1 ubicando un bloque fuera de alcance de la variable origen!
error.eventMethodDeclaration=Est\u00e1 ubicando un bloque fuera de alcance del Metodo correspondiente!
error.tipoIncorrecto=No corresponde al mismo tipo!

RITA.says=RITA dice:

